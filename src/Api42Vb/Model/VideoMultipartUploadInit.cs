/*
 * 42videobricks
 *
 * 42videobricks is a Video Platform As A Service (VPaaS)
 *
 * The version of the OpenAPI document: 1.2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Api42Vb.Client.OpenAPIDateConverter;

namespace Api42Vb.Model
{
    /// <summary>
    /// Video Mutlipart Upload Init
    /// </summary>
    [DataContract(Name = "VideoMultipartUploadInit")]
    public partial class VideoMultipartUploadInit : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VideoMultipartUploadInit" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected VideoMultipartUploadInit() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="VideoMultipartUploadInit" /> class.
        /// </summary>
        /// <param name="name">file name (required).</param>
        /// <param name="size">file size (in bits) (required).</param>
        public VideoMultipartUploadInit(string name = default(string), int size = default(int))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for VideoMultipartUploadInit and cannot be null");
            }
            this.Name = name;
            this.Size = size;
        }

        /// <summary>
        /// file name
        /// </summary>
        /// <value>file name</value>
        /// <example>myvideo.mov</example>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// file size (in bits)
        /// </summary>
        /// <value>file size (in bits)</value>
        /// <example>1000000</example>
        [DataMember(Name = "size", IsRequired = true, EmitDefaultValue = true)]
        public int Size { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VideoMultipartUploadInit {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Size: ").Append(Size).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
