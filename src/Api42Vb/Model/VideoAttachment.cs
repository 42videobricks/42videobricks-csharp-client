/*
 * 42videobricks
 *
 * 42videobricks is a Video Platform As A Service (VPaaS)
 *
 * The version of the OpenAPI document: 1.2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Api42Vb.Client.OpenAPIDateConverter;

namespace Api42Vb.Model
{
    /// <summary>
    /// Video Attachment Object
    /// </summary>
    [DataContract(Name = "VideoAttachment")]
    public partial class VideoAttachment : IValidatableObject
    {
        /// <summary>
        /// Attachment type
        /// </summary>
        /// <value>Attachment type</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum AttachmentTypeEnum
        {
            /// <summary>
            /// Enum Caption for value: caption
            /// </summary>
            [EnumMember(Value = "caption")]
            Caption = 1,

            /// <summary>
            /// Enum Subtitle for value: subtitle
            /// </summary>
            [EnumMember(Value = "subtitle")]
            Subtitle = 2
        }


        /// <summary>
        /// Attachment type
        /// </summary>
        /// <value>Attachment type</value>
        /// <example>caption</example>
        [DataMember(Name = "attachmentType", EmitDefaultValue = false)]
        public AttachmentTypeEnum? AttachmentType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="VideoAttachment" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected VideoAttachment() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="VideoAttachment" /> class.
        /// </summary>
        /// <param name="videoId">id of the video (required).</param>
        /// <param name="attachmentType">Attachment type (default to AttachmentTypeEnum.Caption).</param>
        /// <param name="name">the name of file.</param>
        /// <param name="url">the path of the content.</param>
        /// <param name="locale">the local of attachment.</param>
        public VideoAttachment(string videoId = default(string), AttachmentTypeEnum? attachmentType = AttachmentTypeEnum.Caption, string name = default(string), string url = default(string), string locale = default(string))
        {
            // to ensure "videoId" is required (not null)
            if (videoId == null)
            {
                throw new ArgumentNullException("videoId is a required property for VideoAttachment and cannot be null");
            }
            this.VideoId = videoId;
            this.AttachmentType = attachmentType;
            this.Name = name;
            this.Url = url;
            this.Locale = locale;
        }

        /// <summary>
        /// id of the video
        /// </summary>
        /// <value>id of the video</value>
        /// <example>STNQM2FIN1Bpa3I3bC9IRw&#x3D;&#x3D;</example>
        [DataMember(Name = "videoId", IsRequired = true, EmitDefaultValue = true)]
        public string VideoId { get; set; }

        /// <summary>
        /// the name of file
        /// </summary>
        /// <value>the name of file</value>
        /// <example>caption.srt</example>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// the path of the content
        /// </summary>
        /// <value>the path of the content</value>
        /// <example>/videos/STNQM2FIN1Bpa3I3bC9IRw&#x3D;&#x3D;/attachment/caption/en-GB</example>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// the local of attachment
        /// </summary>
        /// <value>the local of attachment</value>
        /// <example>en-GB</example>
        [DataMember(Name = "locale", EmitDefaultValue = false)]
        public string Locale { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VideoAttachment {\n");
            sb.Append("  VideoId: ").Append(VideoId).Append("\n");
            sb.Append("  AttachmentType: ").Append(AttachmentType).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Locale: ").Append(Locale).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
