/*
 * 42videobricks
 *
 * 42videobricks is a Video Platform As A Service (VPaaS)
 *
 * The version of the OpenAPI document: 1.2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Api42Vb.Client.OpenAPIDateConverter;

namespace Api42Vb.Model
{
    /// <summary>
    /// Webhook Object
    /// </summary>
    [DataContract(Name = "Webhook")]
    public partial class Webhook : IValidatableObject
    {
        /// <summary>
        /// Defines EventType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum EventTypeEnum
        {
            /// <summary>
            /// Enum STATUS for value: VIDEO_STATUS
            /// </summary>
            [EnumMember(Value = "VIDEO_STATUS")]
            STATUS = 1,

            /// <summary>
            /// Enum TRANSCODINGPROGRESS for value: VIDEO_TRANSCODING_PROGRESS
            /// </summary>
            [EnumMember(Value = "VIDEO_TRANSCODING_PROGRESS")]
            TRANSCODINGPROGRESS = 2
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="Webhook" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Webhook() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Webhook" /> class.
        /// </summary>
        /// <param name="url">Url of the application wich is receiving Notifications (required).</param>
        /// <param name="token">Optionnal Secret token to validate notifications. Sent with the request in the X-Vpass-Token HTTP header..</param>
        /// <param name="eventType">List of event to be notified:   * VIDEO_STATUS: Get Video object status modification notifications   Status values: REQUESTED, CREATED, TRANSCODING, TRANSCODING_ERROR, AVAILABLE, DELETED   * VIDEO_TRANSCODING_PROGRESS: Get transcoding progression notifications (required).</param>
        /// <param name="id">id of the webhook (required).</param>
        /// <param name="ctime">Creation date (timestamp).</param>
        /// <param name="mtime">Modification date (timestamp).</param>
        public Webhook(string url = default(string), string token = default(string), List<EventTypeEnum> eventType = default(List<EventTypeEnum>), string id = default(string), int ctime = default(int), int mtime = default(int))
        {
            // to ensure "url" is required (not null)
            if (url == null)
            {
                throw new ArgumentNullException("url is a required property for Webhook and cannot be null");
            }
            this.Url = url;
            // to ensure "eventType" is required (not null)
            if (eventType == null)
            {
                throw new ArgumentNullException("eventType is a required property for Webhook and cannot be null");
            }
            this.EventType = eventType;
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for Webhook and cannot be null");
            }
            this.Id = id;
            this.Token = token;
            this.Ctime = ctime;
            this.Mtime = mtime;
        }

        /// <summary>
        /// Url of the application wich is receiving Notifications
        /// </summary>
        /// <value>Url of the application wich is receiving Notifications</value>
        /// <example>https://myapplication.com/notification</example>
        [DataMember(Name = "url", IsRequired = true, EmitDefaultValue = true)]
        public string Url { get; set; }

        /// <summary>
        /// Optionnal Secret token to validate notifications. Sent with the request in the X-Vpass-Token HTTP header.
        /// </summary>
        /// <value>Optionnal Secret token to validate notifications. Sent with the request in the X-Vpass-Token HTTP header.</value>
        /// <example>9981f9f4-657a-4ebf-be7c-19bedd4775</example>
        [DataMember(Name = "token", EmitDefaultValue = false)]
        public string Token { get; set; }

        /// <summary>
        /// List of event to be notified:   * VIDEO_STATUS: Get Video object status modification notifications   Status values: REQUESTED, CREATED, TRANSCODING, TRANSCODING_ERROR, AVAILABLE, DELETED   * VIDEO_TRANSCODING_PROGRESS: Get transcoding progression notifications
        /// </summary>
        /// <value>List of event to be notified:   * VIDEO_STATUS: Get Video object status modification notifications   Status values: REQUESTED, CREATED, TRANSCODING, TRANSCODING_ERROR, AVAILABLE, DELETED   * VIDEO_TRANSCODING_PROGRESS: Get transcoding progression notifications</value>
        /// <example>[VIDEO_STATUS, VIDEO_TRANSCODING_PROGRESS]</example>
        [DataMember(Name = "eventType", IsRequired = true, EmitDefaultValue = true)]
        public List<Webhook.EventTypeEnum> EventType { get; set; }

        /// <summary>
        /// id of the webhook
        /// </summary>
        /// <value>id of the webhook</value>
        /// <example>01GVZHMKS5B8SKEHSHRD0QHKYF</example>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Creation date (timestamp)
        /// </summary>
        /// <value>Creation date (timestamp)</value>
        /// <example>1677020400</example>
        [DataMember(Name = "ctime", EmitDefaultValue = false)]
        public int Ctime { get; set; }

        /// <summary>
        /// Modification date (timestamp)
        /// </summary>
        /// <value>Modification date (timestamp)</value>
        /// <example>1679526000</example>
        [DataMember(Name = "mtime", EmitDefaultValue = false)]
        public int Mtime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Webhook {\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  Token: ").Append(Token).Append("\n");
            sb.Append("  EventType: ").Append(EventType).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Ctime: ").Append(Ctime).Append("\n");
            sb.Append("  Mtime: ").Append(Mtime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Url (string) maxLength
            if (this.Url != null && this.Url.Length > 2048)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Url, length must be less than 2048.", new [] { "Url" });
            }

            // Token (string) maxLength
            if (this.Token != null && this.Token.Length > 256)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Token, length must be less than 256.", new [] { "Token" });
            }

            yield break;
        }
    }

}
