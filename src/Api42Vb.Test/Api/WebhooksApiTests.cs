/*
 * 42videobricks
 *
 * 42videobricks is a Video Platform As A Service (VPaaS)
 *
 * The version of the OpenAPI document: 1.2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Api42Vb.Client;
using Api42Vb.Api;
// uncomment below to import models
//using Api42Vb.Model;

namespace Api42Vb.Test.Api
{
    /// <summary>
    ///  Class for testing WebhooksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class WebhooksApiTests : IDisposable
    {
        private WebhooksApi instance;

        public WebhooksApiTests()
        {
            instance = new WebhooksApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of WebhooksApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' WebhooksApi
            //Assert.IsType<WebhooksApi>(instance);
        }

        /// <summary>
        /// Test AddWebhook
        /// </summary>
        [Fact]
        public void AddWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WebhookProperties webhookProperties = null;
            //var response = instance.AddWebhook(webhookProperties);
            //Assert.IsType<Webhook>(response);
        }

        /// <summary>
        /// Test DeleteWebhookById
        /// </summary>
        [Fact]
        public void DeleteWebhookByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //instance.DeleteWebhookById(webhookId);
        }

        /// <summary>
        /// Test GetWebhookById
        /// </summary>
        [Fact]
        public void GetWebhookByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //var response = instance.GetWebhookById(webhookId);
            //Assert.IsType<Webhook>(response);
        }

        /// <summary>
        /// Test GetWebhooks
        /// </summary>
        [Fact]
        public void GetWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //int? offset = null;
            //var response = instance.GetWebhooks(limit, offset);
            //Assert.IsType<WebhookList>(response);
        }

        /// <summary>
        /// Test UpdateWebhookById
        /// </summary>
        [Fact]
        public void UpdateWebhookByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //WebhookProperties webhookProperties = null;
            //var response = instance.UpdateWebhookById(webhookId, webhookProperties);
            //Assert.IsType<Webhook>(response);
        }
    }
}
