/*
 * 42videobricks
 *
 * 42videobricks is a Video Platform As A Service (VPaaS)
 *
 * The version of the OpenAPI document: 1.2
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Api42Vb.Client;
using Api42Vb.Api;
// uncomment below to import models
//using Api42Vb.Model;

namespace Api42Vb.Test.Api
{
    /// <summary>
    ///  Class for testing PlaylistsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PlaylistsApiTests : IDisposable
    {
        private PlaylistsApi instance;

        public PlaylistsApiTests()
        {
            instance = new PlaylistsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PlaylistsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PlaylistsApi
            //Assert.IsType<PlaylistsApi>(instance);
        }

        /// <summary>
        /// Test AddPlaylist
        /// </summary>
        [Fact]
        public void AddPlaylistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PlaylistProperties playlistProperties = null;
            //var response = instance.AddPlaylist(playlistProperties);
            //Assert.IsType<Playlist>(response);
        }

        /// <summary>
        /// Test DeletePlaylistById
        /// </summary>
        [Fact]
        public void DeletePlaylistByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string playlistId = null;
            //instance.DeletePlaylistById(playlistId);
        }

        /// <summary>
        /// Test GetPlaylistById
        /// </summary>
        [Fact]
        public void GetPlaylistByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string playlistId = null;
            //var response = instance.GetPlaylistById(playlistId);
            //Assert.IsType<Playlist>(response);
        }

        /// <summary>
        /// Test GetPlaylists
        /// </summary>
        [Fact]
        public void GetPlaylistsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //int? offset = null;
            //string? search = null;
            //string? sort = null;
            //var response = instance.GetPlaylists(limit, offset, search, sort);
            //Assert.IsType<PlaylistList>(response);
        }

        /// <summary>
        /// Test UpdatePlaylistById
        /// </summary>
        [Fact]
        public void UpdatePlaylistByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string playlistId = null;
            //PlaylistProperties playlistProperties = null;
            //var response = instance.UpdatePlaylistById(playlistId, playlistProperties);
            //Assert.IsType<Playlist>(response);
        }
    }
}
